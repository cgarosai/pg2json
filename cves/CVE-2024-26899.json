{
    "id": 246048,
    "name": "CVE-2024-26899",
    "cwe": "CWE-667",
    "modified": "2024-04-29T17:34:10",
    "published": "2024-04-17T09:15:10",
    "status": "Analyzed",
    "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nblock: fix deadlock between bd_link_disk_holder and partition scan\n\n'open_mutex' of gendisk is used to protect open/close block devices. But\nin bd_link_disk_holder(), it is used to protect the creation of symlink\nbetween holding disk and slave bdev, which introduces some issues.\n\nWhen bd_link_disk_holder() is called, the driver is usually in the process\nof initialization/modification and may suspend submitting io. At this\ntime, any io hold 'open_mutex', such as scanning partitions, can cause\ndeadlocks. For example, in raid:\n\nT1                              T2\nbdev_open_by_dev\n lock open_mutex [1]\n ...\n  efi_partition\n  ...\n   md_submit_bio\n\t\t\t\tmd_ioctl mddev_syspend\n\t\t\t\t  -> suspend all io\n\t\t\t\t md_add_new_disk\n\t\t\t\t  bind_rdev_to_array\n\t\t\t\t   bd_link_disk_holder\n\t\t\t\t    try lock open_mutex [2]\n    md_handle_request\n     -> wait mddev_resume\n\nT1 scan partition, T2 add a new device to raid. T1 waits for T2 to resume\nmddev, but T2 waits for open_mutex held by T1. Deadlock occurs.\n\nFix it by introducing a local mutex 'blk_holder_mutex' to replace\n'open_mutex'.",
    "cvss3": {
        "cvss": 5.5,
        "exploitability_score": 1.8,
        "impact_score": 3.6,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
    },
    "cvss2": null,
    "cpes": [
        {
            "id": 1217932
        },
        {
            "id": 1217933
        },
        {
            "id": 1217934
        },
        {
            "id": 1217935
        },
        {
            "id": 1217937
        },
        {
            "id": 1248979
        },
        {
            "id": 1248980
        },
        {
            "id": 1248981
        },
        {
            "id": 1248982
        },
        {
            "id": 1248989
        },
        {
            "id": 1248990
        },
        {
            "id": 1262084
        },
        {
            "id": 1266367
        },
        {
            "id": 1266368
        },
        {
            "id": 1266369
        },
        {
            "id": 1266388
        },
        {
            "id": 1266389
        },
        {
            "id": 1266390
        },
        {
            "id": 1266391
        },
        {
            "id": 1266392
        }
    ]
}