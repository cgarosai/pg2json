{
    "id": 216302,
    "name": "CVE-2023-32691",
    "cwe": "CWE-203",
    "modified": "2023-06-05T15:37:04",
    "published": "2023-05-30T02:15:09",
    "status": "Analyzed",
    "summary": "gost (GO Simple Tunnel) is a simple tunnel written in golang. Sensitive secrets such as passwords, token and API keys should be compared only using a constant-time comparison function. Untrusted input, sourced from a HTTP header, is compared directly with a secret. Since this comparison is not secure, an attacker can mount a side-channel timing attack to guess the password. As a workaround, this can be easily fixed using a constant time comparing function such as `crypto/subtle`'s `ConstantTimeCompare`. \n",
    "cvss3": {
        "cvss": 5.9,
        "exploitability_score": 2.2,
        "impact_score": 3.6,
        "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N"
    },
    "cvss2": null,
    "cpes": [
        {
            "id": 1095934
        },
        {
            "id": 1095935
        },
        {
            "id": 1095936
        },
        {
            "id": 1095937
        },
        {
            "id": 1095938
        },
        {
            "id": 1095939
        },
        {
            "id": 1095940
        },
        {
            "id": 1095941
        },
        {
            "id": 1095942
        },
        {
            "id": 1095943
        },
        {
            "id": 1095944
        },
        {
            "id": 1095945
        },
        {
            "id": 1095946
        },
        {
            "id": 1095947
        },
        {
            "id": 1095948
        },
        {
            "id": 1095949
        },
        {
            "id": 1095950
        },
        {
            "id": 1095951
        },
        {
            "id": 1095952
        },
        {
            "id": 1095953
        },
        {
            "id": 1095954
        },
        {
            "id": 1095955
        },
        {
            "id": 1095956
        },
        {
            "id": 1095957
        },
        {
            "id": 1095958
        },
        {
            "id": 1095959
        },
        {
            "id": 1095960
        },
        {
            "id": 1095961
        },
        {
            "id": 1095962
        },
        {
            "id": 1095963
        },
        {
            "id": 1095964
        },
        {
            "id": 1095965
        },
        {
            "id": 1095966
        },
        {
            "id": 1095967
        },
        {
            "id": 1095968
        },
        {
            "id": 1095969
        },
        {
            "id": 1095970
        },
        {
            "id": 1095971
        },
        {
            "id": 1095972
        },
        {
            "id": 1095973
        },
        {
            "id": 1095974
        },
        {
            "id": 1095975
        },
        {
            "id": 1095976
        },
        {
            "id": 1095977
        },
        {
            "id": 1095978
        },
        {
            "id": 1095979
        },
        {
            "id": 1095980
        }
    ]
}