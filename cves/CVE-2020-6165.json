{
    "id": 147165,
    "name": "CVE-2020-6165",
    "cwe": "CWE-276",
    "modified": "2020-07-23T12:22:48",
    "published": "2020-07-15T19:15:13",
    "status": "Analyzed",
    "summary": "SilverStripe 4.5.0 allows attackers to read certain records that should not have been placed into a result set. This affects silverstripe/recipe-cms. The automatic permission-checking mechanism in the silverstripe/graphql module does not provide complete protection against lists that are limited (e.g., through pagination), resulting in records that should have failed a permission check being added to the final result set. GraphQL endpoints are configured by default (e.g., for assets), but the admin/graphql endpoint is access protected by default. This limits the vulnerability to all authenticated users, including those with limited permissions (e.g., where viewing records exposed through admin/graphql requires administrator permissions). However, if custom GraphQL endpoints have been configured for a specific implementation (usually under /graphql), this vulnerability could also be exploited through unauthenticated requests. This vulnerability only applies to reading records; it does not allow unauthorised changing of records.",
    "cvss3": {
        "cvss": 5.3,
        "exploitability_score": 3.9,
        "impact_score": 1.4,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"
    },
    "cvss2": {
        "exploitability_score": 10.0,
        "impact_score": 2.9,
        "cvss": 5.0,
        "vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N"
    },
    "cpes": [
        {
            "id": 110409
        },
        {
            "id": 228461
        },
        {
            "id": 228462
        },
        {
            "id": 228463
        },
        {
            "id": 228465
        },
        {
            "id": 228466
        },
        {
            "id": 490101
        },
        {
            "id": 490102
        },
        {
            "id": 490103
        },
        {
            "id": 490104
        },
        {
            "id": 490105
        },
        {
            "id": 490106
        },
        {
            "id": 490107
        },
        {
            "id": 490108
        },
        {
            "id": 490109
        },
        {
            "id": 490110
        },
        {
            "id": 490111
        },
        {
            "id": 490112
        },
        {
            "id": 490113
        },
        {
            "id": 490114
        },
        {
            "id": 490117
        },
        {
            "id": 490118
        },
        {
            "id": 490119
        },
        {
            "id": 490217
        },
        {
            "id": 490218
        },
        {
            "id": 490219
        },
        {
            "id": 490220
        },
        {
            "id": 490221
        },
        {
            "id": 490222
        }
    ]
}