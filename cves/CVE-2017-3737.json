{
    "id": 98059,
    "name": "CVE-2017-3737",
    "cwe": "CWE-787",
    "modified": "2019-10-02T22:03:26",
    "published": "2017-12-07T15:29:00",
    "status": "Modified",
    "summary": "OpenSSL 1.0.2 (starting from version 1.0.2b) introduced an \"error state\" mechanism. The intent was that if a fatal error occurred during a handshake then OpenSSL would move into the error state and would immediately fail if you attempted to continue the handshake. This works as designed for the explicit handshake functions (SSL_do_handshake(), SSL_accept() and SSL_connect()), however due to a bug it does not work correctly if SSL_read() or SSL_write() is called directly. In that scenario, if the handshake fails then a fatal error will be returned in the initial function call. If SSL_read()/SSL_write() is subsequently called by the application for the same SSL object then it will succeed and the data is passed without being decrypted/encrypted directly from the SSL/TLS record layer. In order to exploit this issue an application bug would have to be present that resulted in a call to SSL_read()/SSL_write() being issued after having already received a fatal error. OpenSSL version 1.0.2b-1.0.2m are affected. Fixed in OpenSSL 1.0.2n. OpenSSL 1.1.0 is not affected.",
    "cvss3": null,
    "cvss2": null,
    "cpes": [
        {
            "id": 100591
        },
        {
            "id": 100592
        },
        {
            "id": 102022
        },
        {
            "id": 112083
        },
        {
            "id": 115861
        },
        {
            "id": 115862
        },
        {
            "id": 119326
        },
        {
            "id": 124823
        },
        {
            "id": 124875
        },
        {
            "id": 129108
        },
        {
            "id": 139737
        },
        {
            "id": 139738
        },
        {
            "id": 139739
        }
    ]
}