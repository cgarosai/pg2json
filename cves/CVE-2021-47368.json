{
    "id": 251068,
    "name": "CVE-2021-47368",
    "cwe": "Unknown",
    "modified": "2024-07-02T23:37:46",
    "published": "2024-05-21T13:15:22",
    "status": "Awaiting Analysis",
    "summary": "In the Linux kernel, the following vulnerability has been resolved:\n\nenetc: Fix illegal access when reading affinity_hint\n\nirq_set_affinity_hit() stores a reference to the cpumask_t\nparameter in the irq descriptor, and that reference can be\naccessed later from irq_affinity_hint_proc_show(). Since\nthe cpu_mask parameter passed to irq_set_affinity_hit() has\nonly temporary storage (it's on the stack memory), later\naccesses to it are illegal. Thus reads from the corresponding\nprocfs affinity_hint file can result in paging request oops.\n\nThe issue is fixed by the get_cpu_mask() helper, which provides\na permanent storage for the cpumask_t parameter.",
    "cvss3": {
        "cvss": 8.1,
        "exploitability_score": 2.8,
        "impact_score": 5.2,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:H"
    },
    "cvss2": null,
    "cpes": []
}