{
    "id": 181605,
    "name": "CVE-2022-24724",
    "cwe": "CWE-190",
    "modified": "2023-11-07T02:44:34",
    "published": "2022-03-03T19:15:07",
    "status": "Modified",
    "summary": "cmark-gfm is GitHub's extended version of the C reference implementation of CommonMark. Prior to versions 0.29.0.gfm.3 and 0.28.3.gfm.21, an integer overflow in cmark-gfm's table row parsing `table.c:row_from_string` may lead to heap memory corruption when parsing tables who's marker rows contain more than UINT16_MAX columns. The impact of this heap corruption ranges from Information Leak to Arbitrary Code Execution depending on how and where `cmark-gfm` is used. If `cmark-gfm` is used for rendering remote user controlled markdown, this vulnerability may lead to Remote Code Execution (RCE) in applications employing affected versions of the `cmark-gfm` library. This vulnerability has been patched in the following cmark-gfm versions 0.29.0.gfm.3 and 0.28.3.gfm.21. A workaround is available. The vulnerability exists in the table markdown extensions of cmark-gfm. Disabling the table extension will prevent this vulnerability from being triggered.",
    "cvss3": {
        "cvss": 9.8,
        "exploitability_score": 3.9,
        "impact_score": 5.9,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    },
    "cvss2": {
        "exploitability_score": 10.0,
        "impact_score": 6.4,
        "cvss": 7.5,
        "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P"
    },
    "cpes": [
        {
            "id": 622632
        },
        {
            "id": 774641
        },
        {
            "id": 852041
        },
        {
            "id": 852042
        },
        {
            "id": 852043
        },
        {
            "id": 852045
        },
        {
            "id": 852046
        },
        {
            "id": 852047
        },
        {
            "id": 852048
        },
        {
            "id": 852049
        },
        {
            "id": 852050
        },
        {
            "id": 852051
        },
        {
            "id": 852052
        },
        {
            "id": 852053
        },
        {
            "id": 852054
        },
        {
            "id": 852055
        },
        {
            "id": 852056
        },
        {
            "id": 852057
        },
        {
            "id": 852058
        },
        {
            "id": 852059
        },
        {
            "id": 852060
        },
        {
            "id": 852061
        },
        {
            "id": 852062
        },
        {
            "id": 852063
        },
        {
            "id": 852064
        },
        {
            "id": 852065
        },
        {
            "id": 852066
        },
        {
            "id": 867883
        }
    ]
}