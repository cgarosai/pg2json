{
    "id": 141155,
    "name": "CVE-2020-11105",
    "cwe": "CWE-763",
    "modified": "2020-04-01T18:11:13",
    "published": "2020-03-30T20:15:15",
    "status": "Analyzed",
    "summary": "An issue was discovered in USC iLab cereal through 1.3.0. It employs caching of std::shared_ptr values, using the raw pointer address as a unique identifier. This becomes problematic if an std::shared_ptr variable goes out of scope and is freed, and a new std::shared_ptr is allocated at the same address. Serialization fidelity thereby becomes dependent upon memory layout. In short, serialized std::shared_ptr variables cannot always be expected to serialize back into their original values. This can have any number of consequences, depending on the context within which this manifests.",
    "cvss3": {
        "cvss": 9.8,
        "exploitability_score": 3.9,
        "impact_score": 5.9,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    },
    "cvss2": {
        "exploitability_score": 10.0,
        "impact_score": 6.4,
        "cvss": 7.5,
        "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P"
    },
    "cpes": [
        {
            "id": 513627
        },
        {
            "id": 513628
        },
        {
            "id": 513629
        },
        {
            "id": 513630
        },
        {
            "id": 513631
        },
        {
            "id": 513632
        },
        {
            "id": 513633
        },
        {
            "id": 513634
        },
        {
            "id": 513635
        },
        {
            "id": 513636
        }
    ]
}