{
    "id": 204869,
    "name": "CVE-2023-22496",
    "cwe": "CWE-77",
    "modified": "2023-01-24T17:52:06",
    "published": "2023-01-14T00:15:15",
    "status": "Analyzed",
    "summary": "Netdata is an open source option for real-time infrastructure monitoring and troubleshooting. An attacker with the ability to establish a streaming connection can execute arbitrary commands on the targeted Netdata agent. When an alert is triggered, the function `health_alarm_execute` is called. This function performs different checks and then enqueues a command by calling `spawn_enq_cmd`. This command is populated with several arguments that are not sanitized. One of them is the `registry_hostname` of the node for which the alert is raised. By providing a specially crafted `registry_hostname` as part of the health data that is streamed to a Netdata (parent) agent, an attacker can execute arbitrary commands at the remote host as a side-effect of the raised alert. Note that the commands are executed as the user running the Netdata Agent. This user is usually named `netdata`. The ability to run arbitrary commands may allow an attacker to escalate privileges by escalating other vulnerabilities in the system, as that user. The problem has been fixed in: Netdata agent v1.37 (stable) and Netdata agent v1.36.0-409 (nightly). As a workaround, streaming is not enabled by default. If you have previously enabled this, it can be disabled. Limiting access to the port on the recipient Agent to trusted child connections may mitigate the impact of this vulnerability.",
    "cvss3": {
        "cvss": 9.8,
        "exploitability_score": 3.9,
        "impact_score": 5.9,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    },
    "cvss2": null,
    "cpes": [
        {
            "id": 335934
        },
        {
            "id": 335935
        },
        {
            "id": 335936
        },
        {
            "id": 335937
        },
        {
            "id": 335938
        },
        {
            "id": 335939
        },
        {
            "id": 335940
        },
        {
            "id": 335941
        },
        {
            "id": 335942
        },
        {
            "id": 335943
        },
        {
            "id": 335944
        },
        {
            "id": 335945
        },
        {
            "id": 335946
        },
        {
            "id": 335947
        },
        {
            "id": 335948
        },
        {
            "id": 335949
        },
        {
            "id": 335950
        },
        {
            "id": 335951
        },
        {
            "id": 335952
        },
        {
            "id": 335953
        },
        {
            "id": 335954
        },
        {
            "id": 335955
        },
        {
            "id": 335956
        },
        {
            "id": 335957
        },
        {
            "id": 335958
        },
        {
            "id": 335959
        },
        {
            "id": 335960
        },
        {
            "id": 335961
        },
        {
            "id": 335962
        }
    ]
}