{
    "id": 164919,
    "name": "CVE-2021-32685",
    "cwe": "CWE-347",
    "modified": "2021-06-23T18:09:12",
    "published": "2021-06-15T23:15:06",
    "status": "Analyzed",
    "summary": "tEnvoy contains the PGP, NaCl, and PBKDF2 in node.js and the browser (hashing, random, encryption, decryption, signatures, conversions), used by TogaTech.org. In versions prior to 7.0.3, the `verifyWithMessage` method of `tEnvoyNaClSigningKey` always returns `true` for any signature that has a SHA-512 hash matching the SHA-512 hash of the message even if the signature was invalid. This issue is patched in version 7.0.3. As a workaround: In `tenvoy.js` under the `verifyWithMessage` method definition within the `tEnvoyNaClSigningKey` class, ensure that the return statement call to `this.verify` ends in `.verified`.",
    "cvss3": {
        "cvss": 9.8,
        "exploitability_score": 3.9,
        "impact_score": 5.9,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    },
    "cvss2": {
        "exploitability_score": 10.0,
        "impact_score": 6.4,
        "cvss": 7.5,
        "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P"
    },
    "cpes": [
        {
            "id": 721398
        },
        {
            "id": 721399
        },
        {
            "id": 721400
        },
        {
            "id": 721401
        },
        {
            "id": 721402
        },
        {
            "id": 721403
        },
        {
            "id": 721404
        },
        {
            "id": 721405
        },
        {
            "id": 721406
        },
        {
            "id": 721407
        },
        {
            "id": 721408
        },
        {
            "id": 721409
        },
        {
            "id": 721410
        },
        {
            "id": 721411
        },
        {
            "id": 721412
        },
        {
            "id": 721413
        }
    ]
}