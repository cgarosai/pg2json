{
    "id": 237903,
    "name": "CVE-2024-24806",
    "cwe": "CWE-918",
    "modified": "2024-07-17T23:15:13",
    "published": "2024-02-07T21:15:10",
    "status": "Modified",
    "summary": "libuv is a multi-platform support library with a focus on asynchronous I/O. The `uv_getaddrinfo` function in `src/unix/getaddrinfo.c` (and its windows counterpart `src/win/getaddrinfo.c`), truncates hostnames to 256 characters before calling `getaddrinfo`. This behavior can be exploited to create addresses like `0x00007f000001`, which are considered valid by `getaddrinfo` and could allow an attacker to craft payloads that resolve to unintended IP addresses, bypassing developer checks. The vulnerability arises due to how the `hostname_ascii` variable (with a length of 256 bytes) is handled in `uv_getaddrinfo` and subsequently in `uv__idna_toascii`. When the hostname exceeds 256 characters, it gets truncated without a terminating null byte. As a result attackers may be able to access internal APIs or for websites (similar to MySpace) that allows users to have `username.example.com` pages. Internal services that crawl or cache these user pages can be exposed to SSRF attacks if a malicious user chooses a long vulnerable username. This issue has been addressed in release version 1.48.0. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "cvss3": {
        "cvss": 7.3,
        "exploitability_score": 3.9,
        "impact_score": 3.4,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"
    },
    "cvss2": null,
    "cpes": [
        {
            "id": 1250472
        },
        {
            "id": 1250474
        },
        {
            "id": 1250475
        },
        {
            "id": 1250476
        },
        {
            "id": 1250477
        },
        {
            "id": 1250478
        },
        {
            "id": 1250479
        },
        {
            "id": 1250480
        },
        {
            "id": 1250481
        },
        {
            "id": 1250482
        },
        {
            "id": 1250483
        },
        {
            "id": 1250484
        },
        {
            "id": 1250485
        },
        {
            "id": 1250486
        },
        {
            "id": 1250487
        },
        {
            "id": 1250488
        },
        {
            "id": 1250489
        },
        {
            "id": 1250490
        },
        {
            "id": 1250491
        },
        {
            "id": 1250492
        },
        {
            "id": 1250493
        },
        {
            "id": 1250494
        },
        {
            "id": 1250495
        },
        {
            "id": 1250496
        },
        {
            "id": 1250497
        },
        {
            "id": 1250498
        },
        {
            "id": 1250499
        },
        {
            "id": 1250500
        },
        {
            "id": 1250501
        },
        {
            "id": 1250502
        },
        {
            "id": 1250503
        },
        {
            "id": 1250504
        },
        {
            "id": 1250505
        },
        {
            "id": 1250506
        },
        {
            "id": 1250507
        }
    ]
}