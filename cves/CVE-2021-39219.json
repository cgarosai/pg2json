{
    "id": 170779,
    "name": "CVE-2021-39219",
    "cwe": "CWE-843",
    "modified": "2023-11-07T02:37:36",
    "published": "2021-09-17T18:15:07",
    "status": "Modified",
    "summary": "Wasmtime is an open source runtime for WebAssembly & WASI. Wasmtime before version 0.30.0 is affected by a type confusion vulnerability. As a Rust library the `wasmtime` crate clearly marks which functions are safe and which are `unsafe`, guaranteeing that if consumers never use `unsafe` then it should not be possible to have memory unsafety issues in their embeddings of Wasmtime. An issue was discovered in the safe API of `Linker::func_*` APIs. These APIs were previously not sound when one `Engine` was used to create the `Linker` and then a different `Engine` was used to create a `Store` and then the `Linker` was used to instantiate a module into that `Store`. Cross-`Engine` usage of functions is not supported in Wasmtime and this can result in type confusion of function pointers, resulting in being able to safely call a function with the wrong type. Triggering this bug requires using at least two `Engine` values in an embedding and then additionally using two different values with a `Linker` (one at the creation time of the `Linker` and another when instantiating a module with the `Linker`). It's expected that usage of more-than-one `Engine` in an embedding is relatively rare since an `Engine` is intended to be a globally shared resource, so the expectation is that the impact of this issue is relatively small. The fix implemented is to change this behavior to `panic!()` in Rust instead of silently allowing it. Using different `Engine` instances with a `Linker` is a programmer bug that `wasmtime` catches at runtime. This bug has been patched and users should upgrade to Wasmtime version 0.30.0. If you cannot upgrade Wasmtime and are using more than one `Engine` in your embedding it's recommended to instead use only one `Engine` for the entire program if possible. An `Engine` is designed to be a globally shared resource that is suitable to have only one for the lifetime of an entire process. If using multiple `Engine`s is required then code should be audited to ensure that `Linker` is only used with one `Engine`.",
    "cvss3": {
        "cvss": 6.3,
        "exploitability_score": 1.0,
        "impact_score": 5.2,
        "vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:H/A:H"
    },
    "cvss2": {
        "exploitability_score": 3.4,
        "impact_score": 4.9,
        "cvss": 3.3,
        "vector": "AV:L/AC:M/Au:N/C:N/I:P/A:P"
    },
    "cpes": [
        {
            "id": 622632
        },
        {
            "id": 774641
        },
        {
            "id": 813520
        },
        {
            "id": 813521
        },
        {
            "id": 813522
        },
        {
            "id": 813523
        },
        {
            "id": 813524
        },
        {
            "id": 813525
        },
        {
            "id": 813526
        },
        {
            "id": 813527
        },
        {
            "id": 813528
        },
        {
            "id": 813529
        },
        {
            "id": 813530
        },
        {
            "id": 813531
        },
        {
            "id": 813532
        },
        {
            "id": 813533
        },
        {
            "id": 813534
        },
        {
            "id": 813535
        },
        {
            "id": 813536
        },
        {
            "id": 813537
        },
        {
            "id": 813538
        },
        {
            "id": 813539
        },
        {
            "id": 813540
        },
        {
            "id": 813541
        },
        {
            "id": 813542
        },
        {
            "id": 813543
        },
        {
            "id": 813544
        },
        {
            "id": 813545
        }
    ]
}