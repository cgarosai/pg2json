{
    "id": 237147,
    "name": "CVE-2024-24567",
    "cwe": "CWE-754",
    "modified": "2024-02-06T18:41:58",
    "published": "2024-01-30T20:15:08",
    "status": "Analyzed",
    "summary": "Vyper is a pythonic Smart Contract Language for the ethereum virtual machine. Vyper compiler allows passing a value in builtin raw_call even if the call is a delegatecall or a staticcall. But in the context of delegatecall and staticcall the handling of value is not possible due to the semantics of the respective opcodes, and vyper will silently ignore the value= argument. If the semantics of the EVM are unknown to the developer, he could suspect that by specifying the `value` kwarg, exactly the given amount will be sent along to the target. This vulnerability affects 0.3.10 and earlier versions.",
    "cvss3": {
        "cvss": 5.3,
        "exploitability_score": 3.9,
        "impact_score": 1.4,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
    },
    "cvss2": null,
    "cpes": [
        {
            "id": 1122895
        },
        {
            "id": 1122896
        },
        {
            "id": 1122897
        },
        {
            "id": 1122898
        },
        {
            "id": 1122899
        },
        {
            "id": 1122900
        },
        {
            "id": 1122901
        },
        {
            "id": 1122902
        },
        {
            "id": 1122903
        },
        {
            "id": 1122904
        },
        {
            "id": 1122905
        },
        {
            "id": 1122906
        },
        {
            "id": 1122907
        },
        {
            "id": 1122908
        },
        {
            "id": 1122909
        },
        {
            "id": 1122910
        },
        {
            "id": 1122911
        },
        {
            "id": 1122912
        },
        {
            "id": 1122913
        },
        {
            "id": 1122914
        },
        {
            "id": 1122915
        },
        {
            "id": 1122916
        },
        {
            "id": 1122917
        },
        {
            "id": 1122918
        },
        {
            "id": 1122919
        },
        {
            "id": 1122920
        },
        {
            "id": 1122921
        },
        {
            "id": 1122922
        },
        {
            "id": 1122923
        },
        {
            "id": 1122924
        },
        {
            "id": 1122925
        },
        {
            "id": 1122926
        },
        {
            "id": 1122927
        },
        {
            "id": 1122928
        },
        {
            "id": 1122929
        },
        {
            "id": 1122930
        },
        {
            "id": 1122931
        },
        {
            "id": 1122932
        },
        {
            "id": 1122933
        },
        {
            "id": 1122934
        },
        {
            "id": 1122935
        },
        {
            "id": 1122936
        },
        {
            "id": 1122937
        },
        {
            "id": 1122938
        },
        {
            "id": 1122939
        },
        {
            "id": 1154826
        }
    ]
}