{
    "id": 206804,
    "name": "CVE-2022-4450",
    "cwe": "CWE-415",
    "modified": "2024-02-04T08:15:08",
    "published": "2023-02-08T19:15:23",
    "status": "Modified",
    "summary": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and\ndecodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data.\nIf the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are\npopulated with pointers to buffers containing the relevant decoded data. The\ncaller is responsible for freeing those buffers. It is possible to construct a\nPEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex()\nwill return a failure code but will populate the header argument with a pointer\nto a buffer that has already been freed. If the caller also frees this buffer\nthen a double free will occur. This will most likely lead to a crash. This\ncould be exploited by an attacker who has the ability to supply malicious PEM\nfiles for parsing to achieve a denial of service attack.\n\nThe functions PEM_read_bio() and PEM_read() are simple wrappers around\nPEM_read_bio_ex() and therefore these functions are also directly affected.\n\nThese functions are also called indirectly by a number of other OpenSSL\nfunctions including PEM_X509_INFO_read_bio_ex() and\nSSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal\nuses of these functions are not vulnerable because the caller does not free the\nheader argument if PEM_read_bio_ex() returns a failure code. These locations\ninclude the PEM_read_bio_TYPE() functions as well as the decoders introduced in\nOpenSSL 3.0.\n\nThe OpenSSL asn1parse command line application is also impacted by this issue.\n\n\n",
    "cvss3": {
        "cvss": 7.5,
        "exploitability_score": 3.9,
        "impact_score": 3.6,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    },
    "cvss2": null,
    "cpes": [
        {
            "id": 207760
        },
        {
            "id": 207761
        },
        {
            "id": 208641
        },
        {
            "id": 208642
        },
        {
            "id": 208643
        },
        {
            "id": 208644
        },
        {
            "id": 208645
        },
        {
            "id": 208646
        },
        {
            "id": 208647
        },
        {
            "id": 208648
        },
        {
            "id": 208649
        },
        {
            "id": 215159
        },
        {
            "id": 340922
        },
        {
            "id": 466479
        },
        {
            "id": 504234
        },
        {
            "id": 539257
        },
        {
            "id": 539258
        },
        {
            "id": 539259
        },
        {
            "id": 624886
        },
        {
            "id": 624887
        },
        {
            "id": 662659
        },
        {
            "id": 673896
        },
        {
            "id": 704390
        },
        {
            "id": 762112
        },
        {
            "id": 820851
        },
        {
            "id": 834075
        },
        {
            "id": 834076
        },
        {
            "id": 834077
        },
        {
            "id": 834078
        },
        {
            "id": 834079
        },
        {
            "id": 834080
        },
        {
            "id": 834081
        },
        {
            "id": 834082
        },
        {
            "id": 834083
        },
        {
            "id": 834084
        },
        {
            "id": 834085
        },
        {
            "id": 834086
        },
        {
            "id": 834087
        },
        {
            "id": 834088
        },
        {
            "id": 834089
        },
        {
            "id": 834090
        },
        {
            "id": 834091
        },
        {
            "id": 834092
        },
        {
            "id": 834093
        },
        {
            "id": 834094
        },
        {
            "id": 834095
        },
        {
            "id": 834096
        },
        {
            "id": 834097
        },
        {
            "id": 865024
        },
        {
            "id": 865025
        },
        {
            "id": 873682
        },
        {
            "id": 873683
        },
        {
            "id": 892705
        },
        {
            "id": 892706
        },
        {
            "id": 908917
        },
        {
            "id": 908918
        },
        {
            "id": 967023
        },
        {
            "id": 967024
        },
        {
            "id": 1097836
        },
        {
            "id": 1097837
        },
        {
            "id": 1110950
        },
        {
            "id": 1110955
        },
        {
            "id": 1110956
        },
        {
            "id": 1110957
        },
        {
            "id": 1111034
        },
        {
            "id": 1111078
        },
        {
            "id": 1111082
        },
        {
            "id": 1165678
        },
        {
            "id": 1165679
        },
        {
            "id": 1228795
        }
    ]
}