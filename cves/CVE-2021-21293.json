{
    "id": 157308,
    "name": "CVE-2021-21293",
    "cwe": "CWE-770",
    "modified": "2022-10-25T10:56:03",
    "published": "2021-02-02T21:15:12",
    "status": "Analyzed",
    "summary": "blaze is a Scala library for building asynchronous pipelines, with a focus on network IO. All servers running blaze-core before version 0.14.15 are affected by a vulnerability in which unbounded connection acceptance leads to file handle exhaustion. Blaze, accepts connections unconditionally on a dedicated thread pool. This has the net effect of amplifying degradation in services that are unable to handle their current request load, since incoming connections are still accepted and added to an unbounded queue. Each connection allocates a socket handle, which drains a scarce OS resource. This can also confound higher level circuit breakers which work based on detecting failed connections. The vast majority of affected users are using it as part of http4s-blaze-server <= 0.21.16. http4s provides a mechanism for limiting open connections, but is enforced inside the Blaze accept loop, after the connection is accepted and the socket opened. Thus, the limit only prevents the number of connections which can be simultaneously processed, not the number of connections which can be held open. The issue is fixed in version 0.14.15 for \"NIO1SocketServerGroup\". A \"maxConnections\" parameter is added, with a default value of 512. Concurrent connections beyond this limit are rejected. To run unbounded, which is not recommended, set a negative number. The \"NIO2SocketServerGroup\" has no such setting and is now deprecated. There are several possible workarounds described in the refrenced GitHub Advisory GHSA-xmw9-q7x9-j5qc.",
    "cvss3": {
        "cvss": 7.5,
        "exploitability_score": 3.9,
        "impact_score": 3.6,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    },
    "cvss2": {
        "exploitability_score": 10.0,
        "impact_score": 2.9,
        "cvss": 5.0,
        "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P"
    },
    "cpes": [
        {
            "id": 656420
        },
        {
            "id": 656421
        },
        {
            "id": 656422
        },
        {
            "id": 656423
        },
        {
            "id": 656424
        },
        {
            "id": 656425
        },
        {
            "id": 656426
        },
        {
            "id": 656427
        },
        {
            "id": 656428
        },
        {
            "id": 656429
        },
        {
            "id": 656430
        },
        {
            "id": 656431
        },
        {
            "id": 656432
        },
        {
            "id": 656433
        },
        {
            "id": 656434
        },
        {
            "id": 656435
        },
        {
            "id": 656436
        },
        {
            "id": 656437
        },
        {
            "id": 656438
        },
        {
            "id": 656439
        },
        {
            "id": 656440
        },
        {
            "id": 656441
        },
        {
            "id": 656442
        },
        {
            "id": 656443
        },
        {
            "id": 656444
        },
        {
            "id": 656445
        },
        {
            "id": 656446
        },
        {
            "id": 656447
        },
        {
            "id": 656448
        },
        {
            "id": 656449
        },
        {
            "id": 656450
        },
        {
            "id": 656451
        },
        {
            "id": 656452
        },
        {
            "id": 656453
        },
        {
            "id": 656454
        },
        {
            "id": 656455
        },
        {
            "id": 656456
        },
        {
            "id": 656457
        },
        {
            "id": 656458
        },
        {
            "id": 656459
        },
        {
            "id": 656460
        },
        {
            "id": 656461
        },
        {
            "id": 656462
        },
        {
            "id": 656463
        },
        {
            "id": 656464
        },
        {
            "id": 656465
        },
        {
            "id": 656466
        },
        {
            "id": 656467
        },
        {
            "id": 656468
        },
        {
            "id": 656469
        },
        {
            "id": 656470
        },
        {
            "id": 656471
        },
        {
            "id": 656472
        },
        {
            "id": 656473
        },
        {
            "id": 656474
        },
        {
            "id": 656475
        },
        {
            "id": 656476
        },
        {
            "id": 656477
        },
        {
            "id": 656478
        }
    ]
}