{
    "id": 217815,
    "name": "CVE-2023-34453",
    "cwe": "CWE-190",
    "modified": "2023-06-27T13:59:58",
    "published": "2023-06-15T15:15:09",
    "status": "Analyzed",
    "summary": "snappy-java is a fast compressor/decompressor for Java. Due to unchecked multiplications, an integer overflow may occur in versions prior to 1.1.10.1, causing a fatal error.\n\nThe function `shuffle(int[] input)` in the file `BitShuffle.java` receives an array of integers and applies a bit shuffle on it. It does so by multiplying the length by 4 and passing it to the natively compiled shuffle function. Since the length is not tested, the multiplication by four can cause an integer overflow and become a smaller value than the true size, or even zero or negative. In the case of a negative value, a `java.lang.NegativeArraySizeException` exception will raise, which can crash the program. In a case of a value that is zero or too small, the code that afterwards references the shuffled array will assume a bigger size of the array, which might cause exceptions such as `java.lang.ArrayIndexOutOfBoundsException`.\n\nThe same issue exists also when using the `shuffle` functions that receive a double, float, long and short, each using a different multiplier that may cause the same issue.\n\nVersion 1.1.10.1 contains a patch for this vulnerability.",
    "cvss3": {
        "cvss": 7.5,
        "exploitability_score": 3.9,
        "impact_score": 3.6,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    },
    "cvss2": null,
    "cpes": [
        {
            "id": 1226895
        },
        {
            "id": 1226896
        },
        {
            "id": 1226897
        },
        {
            "id": 1226898
        },
        {
            "id": 1226899
        },
        {
            "id": 1226900
        },
        {
            "id": 1226901
        },
        {
            "id": 1226902
        },
        {
            "id": 1226903
        },
        {
            "id": 1226904
        },
        {
            "id": 1226905
        },
        {
            "id": 1226906
        },
        {
            "id": 1226907
        },
        {
            "id": 1226908
        },
        {
            "id": 1226909
        },
        {
            "id": 1226910
        },
        {
            "id": 1226911
        },
        {
            "id": 1226912
        },
        {
            "id": 1226913
        },
        {
            "id": 1226914
        },
        {
            "id": 1226915
        },
        {
            "id": 1226916
        },
        {
            "id": 1226917
        },
        {
            "id": 1226918
        },
        {
            "id": 1226919
        },
        {
            "id": 1226920
        },
        {
            "id": 1226921
        },
        {
            "id": 1226922
        },
        {
            "id": 1226923
        },
        {
            "id": 1226924
        },
        {
            "id": 1226925
        },
        {
            "id": 1226926
        },
        {
            "id": 1226927
        },
        {
            "id": 1226928
        },
        {
            "id": 1226929
        },
        {
            "id": 1226930
        },
        {
            "id": 1226936
        },
        {
            "id": 1226937
        },
        {
            "id": 1226938
        },
        {
            "id": 1226939
        },
        {
            "id": 1226940
        },
        {
            "id": 1226941
        },
        {
            "id": 1226942
        },
        {
            "id": 1226943
        },
        {
            "id": 1226944
        },
        {
            "id": 1226945
        },
        {
            "id": 1226946
        },
        {
            "id": 1226947
        },
        {
            "id": 1226948
        },
        {
            "id": 1226949
        },
        {
            "id": 1226950
        },
        {
            "id": 1226951
        },
        {
            "id": 1226952
        },
        {
            "id": 1226953
        },
        {
            "id": 1226954
        },
        {
            "id": 1226955
        },
        {
            "id": 1226956
        },
        {
            "id": 1226957
        },
        {
            "id": 1226958
        },
        {
            "id": 1226959
        },
        {
            "id": 1226960
        },
        {
            "id": 1226961
        },
        {
            "id": 1226962
        },
        {
            "id": 1226963
        },
        {
            "id": 1226964
        },
        {
            "id": 1226965
        },
        {
            "id": 1226966
        },
        {
            "id": 1226967
        },
        {
            "id": 1226968
        },
        {
            "id": 1226969
        },
        {
            "id": 1226970
        },
        {
            "id": 1226971
        },
        {
            "id": 1226972
        }
    ]
}