{
    "id": 135410,
    "name": "CVE-2019-16786",
    "cwe": "CWE-444",
    "modified": "2023-11-07T02:05:44",
    "published": "2019-12-20T22:15:11",
    "status": "Modified",
    "summary": "Waitress through version 1.3.1 would parse the Transfer-Encoding header and only look for a single string value, if that value was not chunked it would fall through and use the Content-Length header instead. According to the HTTP standard Transfer-Encoding should be a comma separated list, with the inner-most encoding first, followed by any further transfer codings, ending with chunked. Requests sent with: \"Transfer-Encoding: gzip, chunked\" would incorrectly get ignored, and the request would use a Content-Length header instead to determine the body size of the HTTP message. This could allow for Waitress to treat a single request as multiple requests in the case of HTTP pipelining. This issue is fixed in Waitress 1.4.0.",
    "cvss3": {
        "cvss": 7.5,
        "exploitability_score": 3.9,
        "impact_score": 3.6,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"
    },
    "cvss2": {
        "exploitability_score": 10.0,
        "impact_score": 2.9,
        "cvss": 5.0,
        "vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N"
    },
    "cpes": [
        {
            "id": 124875
        },
        {
            "id": 259197
        },
        {
            "id": 358456
        },
        {
            "id": 463910
        },
        {
            "id": 463911
        },
        {
            "id": 463912
        },
        {
            "id": 463913
        },
        {
            "id": 463914
        },
        {
            "id": 463915
        },
        {
            "id": 463916
        },
        {
            "id": 463917
        },
        {
            "id": 463918
        },
        {
            "id": 463919
        },
        {
            "id": 463920
        },
        {
            "id": 463921
        },
        {
            "id": 463922
        },
        {
            "id": 463923
        },
        {
            "id": 463924
        },
        {
            "id": 463925
        },
        {
            "id": 463926
        },
        {
            "id": 463927
        },
        {
            "id": 463928
        },
        {
            "id": 463929
        },
        {
            "id": 463930
        },
        {
            "id": 463931
        },
        {
            "id": 463932
        },
        {
            "id": 463933
        },
        {
            "id": 463934
        },
        {
            "id": 463935
        },
        {
            "id": 463936
        },
        {
            "id": 463937
        },
        {
            "id": 758355
        },
        {
            "id": 876935
        }
    ]
}